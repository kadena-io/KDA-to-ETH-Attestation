{"version":3,"sources":["contexts/MessageContextProvider.tsx","contracts/factories/ERC20__factory.ts","erc20.ts","hooks/token.ts","parser.ts","utils.ts","components/CSVEditor.tsx","components/CSVUpload.tsx","components/Receiver.tsx","components/Token.tsx","components/TransferTable.tsx","components/CSVForm.tsx","hooks/ens.ts","transfers.ts","components/Header.tsx","App.tsx","static/error-icon.svg","GlobalStyle.ts","index.tsx"],"names":["MessageContext","React","createContext","messages","setMessages","removeMessage","message","addMessage","codeWarnings","setCodeWarnings","MessageContextProvider","props","useState","contextValue","messageToRemove","filter","messageToAdd","some","Provider","value","children","_abi","inputs","internalType","name","type","stateMutability","anonymous","indexed","outputs","_bytecode","ERC20__factory","signer","name_","symbol_","overrides","address","utils","Interface","signerOrProvider","Contract","ContractFactory","bytecode","abi","erc20Interface","createInterface","erc20Instance","provider","connect","networkMap","Map","tokenMap","tokenList","res","token","set","getAddress","fetchTokenList","chainId","a","fetch","json","tokens","rinkeby","xdaiTokens","console","error","get","Error","useTokenList","safe","useSafeAppsSDK","setTokenList","isLoading","setIsLoading","useEffect","isMounted","then","result","transformRow","row","tokenInfoProvider","ensResolver","callback","toPayment","tokenAddress","token_address","isAddress","amount","BigNumber","receiver","catch","reason","validateRow","warnings","areAddressesValid","isAmountPositive","isTokenValid","length","join","push","isGreaterThan","toFixed","decimals","symbol","prePayment","isEnsEnabled","resolveName","resolvedReceiverAddress","receiverEnsName","getNativeTokenSymbol","resolvedTokenAddress","undefined","getTokenInfo","tokenInfo","TWO","TEN","pow","minus","toWei","multipliedBy","decimalPlaces","ROUND_DOWN","transfersToSummary","transfers","reduce","previousValue","currentValue","tokenSummary","plus","checkAllBalances","summary","web3Provider","insufficientTokens","values","getBalance","safeAddress","tokenBalance","isSufficientBalance","transferAmount","erc20Contract","balanceOf","ethers","from","tokenBalanceNumber","toString","transferAmountInWei","gte","EditorWrapper","styled","div","CSVEditor","useContext","onChange","newCode","csvText","theme","width","mode","minLines","maxLines","setOptions","firstLineNumber","showPrintMargin","style","borderWidth","borderColor","borderRadius","borderStyle","boxShadow","markers","map","warning","startRow","lineNo","endRow","className","startCol","endCol","annotations","column","text","CSVUpload","onDrop","useCallback","acceptedFiles","forEach","file","log","reader","FileReader","onload","evt","target","readAsText","useDropzone","maxFiles","accept","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","useMemo","styles","baseStyle","activeStyle","acceptStyle","rejectStyle","display","flexDirection","alignItems","gap","size","variant","color","component","center","createStyles","lex","padding","backgroundColor","outline","transition","GnosisTheme","colors","primary","Container","Receiver","receiverAddress","title","Token","alt","src","logoURI","maxWidth","marginRight","verticalAlign","TransferTable","transferContent","headers","id","label","rows","index","cells","content","Form","CSVForm","parsing","setParsing","setTransferContent","setCsvText","submitting","setSubmitting","sdk","providers","Web3Provider","SafeAppProvider","has","tokenContract","useTokenInfoProvider","resolveCache","lookupCache","cachedResolveName","ensName","cachedAddress","resolvedAddress","cachedLookupAddress","lookupAddress","resolvedEnsName","getNetwork","network","ensAddress","useEnsResolver","submitTx","txs","transfer","to","data","amountData","encodeFunctionData","send","sendTxResponse","getBySafeTxHash","safeTxHash","safeTx","onChangeTextHandler","parseAndValidateCSV","debounce","Promise","resolve","reject","results","resultingWarnings","parseString","transform","validate","on","rowNumber","_row","split","severity","generateWarnings","parseCSV","add","Set","all","insufficientBalances","insufficientBalanceInfo","onClick","alignSelf","disabled","Alert","elevation","HeaderContainer","AlertWrapper","Header","messageContext","Snackbar","anchorOrigin","vertical","horizontal","open","onClose","autoHideDuration","setUseWhatChange","process","App","GlobalStyle","createGlobalStyle","avertaFont","avertaBoldFont","errorIcon","ReactDOM","render","StrictMode","loader","document","getElementById"],"mappings":"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","file":"static/js/main.5b84d12b.chunk.js","sourcesContent":["import React, { useState, ReactElement } from \"react\";\n\nexport type CodeWarning = {\n  message: string;\n  severity: string;\n  lineNo: number;\n};\n\nexport type Message = {\n  message: string;\n  severity: string;\n};\n\ntype MessageContextType = {\n  messages: Message[];\n  setMessages: (messages: Message[]) => void;\n  removeMessage: (message: Message) => void;\n  addMessage: (message: Message) => void;\n  codeWarnings: CodeWarning[];\n  setCodeWarnings: (messages: CodeWarning[]) => void;\n};\n\nexport const MessageContext = React.createContext<MessageContextType>({\n  messages: [],\n  setMessages: (messages: (Message | CodeWarning)[]) => {},\n  removeMessage: (message: Message | CodeWarning) => {},\n  addMessage: (message: Message | CodeWarning) => {},\n  codeWarnings: [],\n  setCodeWarnings: (messages: CodeWarning[]) => {},\n});\n\ntype MessageContextProviderProps = {\n  children: ReactElement;\n};\n\nexport const MessageContextProvider = (props: MessageContextProviderProps) => {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [codeWarnings, setCodeWarnings] = useState<CodeWarning[]>([]);\n\n  const removeMessage = (messageToRemove: Message | CodeWarning) =>\n    setMessages(messages.filter((message) => message.message !== messageToRemove.message));\n\n  const addMessage = (messageToAdd: Message | CodeWarning) => {\n    // Do not add equal message\n    if (!messages.some((message) => message.message === messageToAdd.message)) {\n      setMessages([messageToAdd, ...messages]);\n    }\n  };\n\n  const contextValue = {\n    messages,\n    setMessages,\n    removeMessage,\n    addMessage,\n    codeWarnings,\n    setCodeWarnings,\n  };\n\n  return <MessageContext.Provider value={contextValue}>{props.children}</MessageContext.Provider>;\n};\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { ERC20, ERC20Interface } from \"../ERC20\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"name_\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"symbol_\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b5060405162000b4b38038062000b4b8339810160408190526200003491620001c1565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b5050506200027b565b828054620000769062000228565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200011f578081fd5b81516001600160401b03808211156200013c576200013c62000265565b604051601f8301601f19908116603f0116810190828211818310171562000167576200016762000265565b8160405283815260209250868385880101111562000183578485fd5b8491505b83821015620001a6578582018301518183018401529082019062000187565b83821115620001b757848385830101525b9695505050505050565b60008060408385031215620001d4578182fd5b82516001600160401b0380821115620001eb578384fd5b620001f9868387016200010e565b935060208501519150808211156200020f578283fd5b506200021e858286016200010e565b9150509250929050565b600181811c908216806200023d57607f821691505b602082108114156200025f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6108c0806200028b6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b4114610149578063a457c2d714610151578063a9059cbb14610164578063dd62ed3e14610177576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101b0565b6040516100c391906107d8565b60405180910390f35b6100df6100da3660046107af565b610242565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610774565b610258565b604051601281526020016100c3565b6100df6101313660046107af565b610307565b6100f3610144366004610721565b610343565b6100b6610362565b6100df61015f3660046107af565b610371565b6100df6101723660046107af565b61040a565b6100f3610185366004610742565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101bf9061084f565b80601f01602080910402602001604051908101604052809291908181526020018280546101eb9061084f565b80156102385780601f1061020d57610100808354040283529160200191610238565b820191906000526020600020905b81548152906001019060200180831161021b57829003601f168201915b5050505050905090565b600061024f338484610417565b50600192915050565b600061026584848461053b565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156102ef5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6102fc8533858403610417565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161024f91859061033e90869061082b565b610417565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546101bf9061084f565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103f35760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102e6565b6104003385858403610417565b5060019392505050565b600061024f33848461053b565b6001600160a01b0383166104795760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102e6565b6001600160a01b0382166104da5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102e6565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831661059f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102e6565b6001600160a01b0382166106015760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102e6565b6001600160a01b038316600090815260208190526040902054818110156106795760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102e6565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106b090849061082b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106fc91815260200190565b60405180910390a350505050565b80356001600160a01b038116811461035d57600080fd5b600060208284031215610732578081fd5b61073b8261070a565b9392505050565b60008060408385031215610754578081fd5b61075d8361070a565b915061076b6020840161070a565b90509250929050565b600080600060608486031215610788578081fd5b6107918461070a565b925061079f6020850161070a565b9150604084013590509250925092565b600080604083850312156107c1578182fd5b6107ca8361070a565b946020939093013593505050565b6000602080835283518082850152825b81811015610804578581018301518582016040015282016107e8565b818111156108155783604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561084a57634e487b7160e01b81526011600452602481fd5b500190565b600181811c9082168061086357607f821691505b6020821081141561088457634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220e3ea3d5f111930ae2bb4c9cdc721d1b844f4cd8ac640676e8a91a65f180e96c964736f6c63430008030033\";\n\nexport class ERC20__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    name_: string,\n    symbol_: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ERC20> {\n    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC20>;\n  }\n  getDeployTransaction(\n    name_: string,\n    symbol_: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(name_, symbol_, overrides || {});\n  }\n  attach(address: string): ERC20 {\n    return super.attach(address) as ERC20;\n  }\n  connect(signer: Signer): ERC20__factory {\n    return super.connect(signer) as ERC20__factory;\n  }\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): ERC20Interface {\n    return new utils.Interface(_abi) as ERC20Interface;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {\n    return new Contract(address, _abi, signerOrProvider) as ERC20;\n  }\n}\n","import { ethers } from \"ethers\";\n\nimport { ERC20, ERC20__factory } from \"./contracts\";\n\nexport const erc20Interface = ERC20__factory.createInterface();\n\nexport function erc20Instance(address: string, provider: ethers.providers.Provider): ERC20 {\n  return ERC20__factory.connect(address, provider);\n}\n","import { SafeAppProvider } from \"@gnosis.pm/safe-apps-provider\";\nimport { useSafeAppsSDK } from \"@gnosis.pm/safe-apps-react-sdk\";\nimport { ethers, utils } from \"ethers\";\nimport xdaiTokens from \"honeyswap-default-token-list\";\nimport { useState, useEffect, useMemo } from \"react\";\n\nimport { erc20Instance } from \"../erc20\";\nimport rinkeby from \"../static/rinkebyTokens.json\";\nimport { TokenInfo } from \"../utils\";\n\nexport type TokenMap = Map<string | null, MinimalTokenInfo>;\n\nexport const networkMap = new Map([\n  [1, \"mainnet\"],\n  [4, \"rinkeby\"],\n  [100, \"xdai\"],\n]);\n\nfunction tokenMap(tokenList: TokenInfo[]): TokenMap {\n  const res: TokenMap = new Map<string, MinimalTokenInfo>();\n  for (const token of tokenList) {\n    res.set(utils.getAddress(token.address), token);\n  }\n  return res;\n}\n\nexport const fetchTokenList = async (chainId: number): Promise<TokenMap> => {\n  let tokens: TokenInfo[];\n  if (chainId === 1) {\n    const mainnetTokenURL = \"https://tokens.coingecko.com/uniswap/all.json\";\n    tokens = (await (await fetch(mainnetTokenURL)).json()).tokens;\n  } else if (chainId === 4) {\n    // Hardcoded this because the list provided at\n    // https://github.com/Uniswap/default-token-list/blob/master/src/tokens/rinkeby.json\n    // Doesn't have GNO or OWL and/or many others.\n    tokens = rinkeby;\n  } else if (chainId === 100) {\n    tokens = xdaiTokens.tokens;\n  } else {\n    console.error(`Unimplemented token list for ${networkMap.get(chainId)} network`);\n    throw new Error(`Unimplemented token list for ${networkMap.get(chainId)} network`);\n  }\n  return tokenMap(tokens);\n};\n\n/**\n * Hook which fetches the tokenList for Components.\n * Will Execute only once on initial load.\n */\nexport function useTokenList(): {\n  tokenList: TokenMap;\n  isLoading: boolean;\n} {\n  const { safe } = useSafeAppsSDK();\n  const [tokenList, setTokenList] = useState<TokenMap>(new Map());\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    let isMounted = true;\n    setIsLoading(true);\n    fetchTokenList(safe.chainId).then((result) => {\n      if (isMounted) {\n        setTokenList(result);\n        setIsLoading(false);\n      }\n    });\n    return function callback() {\n      isMounted = false;\n    };\n  }, [safe.chainId]);\n  return { tokenList, isLoading };\n}\n\nexport type MinimalTokenInfo = {\n  decimals: number;\n  address: string;\n  symbol?: string;\n  logoURI?: string;\n};\n\nexport interface TokenInfoProvider {\n  getTokenInfo: (tokenAddress: string) => Promise<MinimalTokenInfo | undefined>;\n  getNativeTokenSymbol: () => string;\n}\n\nexport const useTokenInfoProvider: () => TokenInfoProvider = () => {\n  const { safe, sdk } = useSafeAppsSDK();\n  const web3Provider = useMemo(() => new ethers.providers.Web3Provider(new SafeAppProvider(safe, sdk)), [sdk, safe]);\n  const { tokenList } = useTokenList();\n\n  return useMemo(\n    () => ({\n      getTokenInfo: async (tokenAddress: string) => {\n        if (tokenList?.has(tokenAddress)) {\n          return tokenList.get(tokenAddress);\n        } else {\n          const tokenContract = erc20Instance(tokenAddress, web3Provider);\n          const decimals = await tokenContract.decimals().catch((reason) => undefined);\n          const symbol = await tokenContract.symbol().catch((reason) => undefined);\n\n          if (typeof decimals !== \"undefined\") {\n            tokenList?.set(tokenAddress, {\n              decimals,\n              symbol,\n              address: tokenAddress,\n            });\n            return { decimals, symbol, address: tokenAddress };\n          } else {\n            return undefined;\n          }\n        }\n      },\n      getNativeTokenSymbol: () => (safe.chainId === 100 ? \"xDai\" : \"ETH\"),\n    }),\n    [safe.chainId, tokenList, web3Provider],\n  );\n};\n","import { parseString, RowTransformCallback, RowValidateCallback } from \"@fast-csv/parse\";\nimport { BigNumber } from \"bignumber.js\";\nimport { utils } from \"ethers\";\n\nimport { CodeWarning } from \"./contexts/MessageContextProvider\";\nimport { EnsResolver } from \"./hooks/ens\";\nimport { TokenInfoProvider } from \"./hooks/token\";\n\n/**\n * Includes methods to parse, transform and validate csv content\n */\n\nexport interface Payment {\n  receiver: string;\n  amount: BigNumber;\n  tokenAddress: string | null;\n  decimals: number;\n  symbol?: string;\n  receiverEnsName: string | null;\n}\n\nexport type CSVRow = {\n  receiver: string;\n  amount: string;\n  token_address: string;\n  decimals?: string;\n};\n\ninterface PrePayment {\n  receiver: string;\n  amount: BigNumber;\n  tokenAddress: string | null;\n}\n\nconst generateWarnings = (\n  // We need the row parameter because of the api of fast-csv\n  _row: Payment,\n  rowNumber: number,\n  warnings: string,\n) => {\n  const messages: CodeWarning[] = warnings.split(\";\").map((warning: string) => ({\n    message: warning,\n    severity: \"warning\",\n    lineNo: rowNumber,\n  }));\n  return messages;\n};\n\nexport const parseCSV = (\n  csvText: string,\n  tokenInfoProvider: TokenInfoProvider,\n  ensResolver: EnsResolver,\n): Promise<[Payment[], CodeWarning[]]> => {\n  return new Promise<[Payment[], CodeWarning[]]>((resolve, reject) => {\n    const results: Payment[] = [];\n    const resultingWarnings: CodeWarning[] = [];\n    parseString<CSVRow, Payment>(csvText, { headers: true })\n      .transform((row: CSVRow, callback) => transformRow(row, tokenInfoProvider, ensResolver, callback))\n      .validate((row: Payment, callback: RowValidateCallback) => validateRow(row, callback))\n      .on(\"data\", (data: Payment) => results.push(data))\n      .on(\"end\", () => resolve([results, resultingWarnings]))\n      .on(\"data-invalid\", (row: Payment, rowNumber: number, warnings: string) =>\n        resultingWarnings.push(...generateWarnings(row, rowNumber, warnings)),\n      )\n      .on(\"error\", (error) => reject(error));\n  });\n};\n\n/**\n * Transforms each row into a payment object.\n */\nconst transformRow = (\n  row: CSVRow,\n  tokenInfoProvider: TokenInfoProvider,\n  ensResolver: EnsResolver,\n  callback: RowTransformCallback<Payment>,\n): void => {\n  const prePayment: PrePayment = {\n    // avoids errors from getAddress. Invalid addresses are later caught in validateRow\n    tokenAddress:\n      row.token_address === \"\" || row.token_address === null\n        ? null\n        : utils.isAddress(row.token_address)\n        ? utils.getAddress(row.token_address)\n        : row.token_address,\n    amount: new BigNumber(row.amount),\n    receiver: utils.isAddress(row.receiver) ? utils.getAddress(row.receiver) : row.receiver,\n  };\n\n  toPayment(prePayment, tokenInfoProvider, ensResolver)\n    .then((row) => callback(null, row))\n    .catch((reason) => callback(reason));\n};\n\n/**\n * Validates, that addresses are valid, the amount is big enough and a decimal is given or can be found in token lists.\n */\nconst validateRow = (row: Payment, callback: RowValidateCallback) => {\n  const warnings = [...areAddressesValid(row), ...isAmountPositive(row), ...isTokenValid(row)];\n  callback(null, warnings.length === 0, warnings.join(\";\"));\n};\n\nconst areAddressesValid = (row: Payment): string[] => {\n  const warnings: string[] = [];\n  if (!(row.tokenAddress === null || utils.isAddress(row.tokenAddress))) {\n    warnings.push(\"Invalid Token Address: \" + row.tokenAddress);\n  }\n  if (!utils.isAddress(row.receiver)) {\n    warnings.push(\"Invalid Receiver Address: \" + row.receiver);\n  }\n  return warnings;\n};\n\nconst isAmountPositive = (row: Payment): string[] =>\n  row.amount.isGreaterThan(0) ? [] : [\"Only positive amounts possible: \" + row.amount.toFixed()];\n\nconst isTokenValid = (row: Payment): string[] =>\n  row.decimals === -1 && row.symbol === \"TOKEN_NOT_FOUND\" ? [`No token contract was found at ${row.tokenAddress}`] : [];\n\nexport async function toPayment(\n  prePayment: PrePayment,\n  tokenInfoProvider: TokenInfoProvider,\n  ensResolver: EnsResolver,\n): Promise<Payment> {\n  // depending on whether there is an ens name or an address provided we either resolve or lookup\n  // For performance reasons the lookup will be done after the parsing.\n  let [resolvedReceiverAddress, receiverEnsName] = utils.isAddress(prePayment.receiver)\n    ? [prePayment.receiver, null]\n    : [\n        (await ensResolver.isEnsEnabled()) ? await ensResolver.resolveName(prePayment.receiver) : null,\n        prePayment.receiver,\n      ];\n  resolvedReceiverAddress = resolvedReceiverAddress !== null ? resolvedReceiverAddress : prePayment.receiver;\n  if (prePayment.tokenAddress === null) {\n    // Native asset payment.\n    return {\n      receiver: resolvedReceiverAddress,\n      amount: prePayment.amount,\n      tokenAddress: prePayment.tokenAddress,\n      decimals: 18,\n      symbol: tokenInfoProvider.getNativeTokenSymbol(),\n      receiverEnsName,\n    };\n  }\n  let resolvedTokenAddress = (await ensResolver.isEnsEnabled())\n    ? await ensResolver.resolveName(prePayment.tokenAddress)\n    : prePayment.tokenAddress;\n  const tokenInfo =\n    resolvedTokenAddress === null ? undefined : await tokenInfoProvider.getTokenInfo(resolvedTokenAddress);\n  if (typeof tokenInfo !== \"undefined\") {\n    let decimals = tokenInfo.decimals;\n    let symbol = tokenInfo.symbol;\n    return {\n      receiver: resolvedReceiverAddress !== null ? resolvedReceiverAddress : prePayment.receiver,\n      amount: prePayment.amount,\n      tokenAddress: resolvedTokenAddress,\n      decimals,\n      symbol,\n      receiverEnsName,\n    };\n  } else {\n    return {\n      receiver: resolvedReceiverAddress !== null ? resolvedReceiverAddress : prePayment.receiver,\n      amount: prePayment.amount,\n      tokenAddress: prePayment.tokenAddress,\n      decimals: -1,\n      symbol: \"TOKEN_NOT_FOUND\",\n      receiverEnsName,\n    };\n  }\n}\n","import { SafeInfo } from \"@gnosis.pm/safe-apps-sdk\";\nimport { BigNumber } from \"bignumber.js\";\nimport { ethers, utils } from \"ethers\";\n\nimport { erc20Instance } from \"./erc20\";\nimport { Payment } from \"./parser\";\n\nexport const ZERO = new BigNumber(0);\nexport const ONE = new BigNumber(1);\nexport const TWO = new BigNumber(2);\nexport const TEN = new BigNumber(10);\nexport const MAX_U256 = TWO.pow(255).minus(1);\n\nexport interface TokenInfo {\n  readonly chainId: number;\n  readonly address: string;\n  readonly name: string;\n  readonly decimals: number;\n  readonly symbol: string;\n  readonly logoURI?: string;\n  readonly tags?: string[];\n  readonly extensions?: {\n    readonly [key: string]: string | number | boolean | null;\n  };\n}\n\nexport function toWei(amount: string | number | BigNumber, decimals: number): BigNumber {\n  let res = TEN.pow(decimals).multipliedBy(amount);\n  if (res.decimalPlaces() > 0) {\n    // TODO - reinstate this warning by passing along with return content\n    // Return (Transaction[], Message)\n    // setLastError({\n    //   message:\n    //     \"Precision too high. Some digits are ignored for row \" + index,\n    // });\n    res = res.decimalPlaces(0, BigNumber.ROUND_DOWN);\n  }\n  return res;\n}\n\nexport function fromWei(amount: BigNumber, decimals: number): BigNumber {\n  return amount.dividedBy(TEN.pow(decimals));\n}\n\nexport type SummaryEntry = {\n  tokenAddress: string | null;\n  amount: BigNumber;\n  decimals: number;\n  symbol?: string;\n};\n\nexport const transfersToSummary = (transfers: Payment[]) => {\n  return transfers.reduce((previousValue, currentValue): Map<string | null, SummaryEntry> => {\n    let tokenSummary = previousValue.get(currentValue.tokenAddress);\n    if (typeof tokenSummary === \"undefined\") {\n      tokenSummary = {\n        tokenAddress: currentValue.tokenAddress,\n        amount: new BigNumber(0),\n        decimals: currentValue.decimals,\n        symbol: currentValue.symbol,\n      };\n      previousValue.set(currentValue.tokenAddress, tokenSummary);\n    }\n    tokenSummary.amount = tokenSummary.amount.plus(currentValue.amount);\n\n    return previousValue;\n  }, new Map<string | null, SummaryEntry>());\n};\n\nexport type InsufficientBalanceInfo = {\n  token: string;\n  transferAmount: string;\n};\n\nexport const checkAllBalances = async (\n  summary: Map<string | null, SummaryEntry>,\n  web3Provider: ethers.providers.Web3Provider,\n  safe: SafeInfo,\n): Promise<InsufficientBalanceInfo[]> => {\n  const insufficientTokens: InsufficientBalanceInfo[] = [];\n  for (const { tokenAddress, amount, decimals, symbol } of summary.values()) {\n    if (tokenAddress === null) {\n      // Check ETH Balance\n      const tokenBalance = await web3Provider.getBalance(safe.safeAddress, \"latest\");\n      if (!isSufficientBalance(tokenBalance, amount, 18)) {\n        insufficientTokens.push({\n          token: \"ETH\",\n          transferAmount: amount.toFixed(),\n        });\n      }\n    } else {\n      const erc20Contract = erc20Instance(utils.getAddress(tokenAddress), web3Provider);\n      const tokenBalance = await erc20Contract.balanceOf(safe.safeAddress).catch((reason) => {\n        console.error(reason);\n        return ethers.BigNumber.from(-1);\n      });\n      if (!isSufficientBalance(tokenBalance, amount, decimals)) {\n        insufficientTokens.push({\n          token: symbol || tokenAddress,\n          transferAmount: amount.toFixed(),\n        });\n      }\n    }\n  }\n  return insufficientTokens;\n};\n\nconst isSufficientBalance = (tokenBalance: ethers.BigNumber, transferAmount: BigNumber, decimals: number) => {\n  const tokenBalanceNumber = new BigNumber(tokenBalance.toString());\n  const transferAmountInWei = toWei(transferAmount, decimals);\n  return tokenBalanceNumber.gte(transferAmountInWei);\n};\n","import React, { useContext } from \"react\";\nimport AceEditor, { IMarker, IAnnotation } from \"react-ace\";\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\nimport \"ace-builds/src-noconflict/mode-text\";\nimport styled from \"styled-components\";\n\nimport { MessageContext } from \"../../src/contexts/MessageContextProvider\";\n\nconst EditorWrapper = styled.div``;\n\nexport type CSVEditorProps = {\n  onChange: (csvContent: string) => void;\n  csvText: string;\n};\n\nexport const CSVEditor = (props: CSVEditorProps): JSX.Element => {\n  const { codeWarnings } = useContext(MessageContext);\n  return (\n    <EditorWrapper>\n      <AceEditor\n        onChange={(newCode) => props.onChange(newCode)}\n        value={props.csvText}\n        theme=\"tomorrow\"\n        width={\"700px\"}\n        mode={\"text\"}\n        minLines={6}\n        maxLines={20}\n        setOptions={{\n          firstLineNumber: 0,\n        }}\n        showPrintMargin={false}\n        style={{\n          borderWidth: 1,\n          borderColor: \"rgba(0, 0, 0, 0.23)\",\n          borderRadius: \"4px\",\n          borderStyle: \"solid\",\n          boxShadow: \"#F7F5F5 1px 2px 4px 0px\",\n        }}\n        markers={codeWarnings.map(\n          (warning): IMarker => ({\n            startRow: warning.lineNo,\n            endRow: warning.lineNo,\n            className: \"error-marker\",\n            type: \"fullLine\",\n            startCol: 0,\n            endCol: 30,\n          }),\n        )}\n        annotations={codeWarnings.map(\n          (warning): IAnnotation => ({\n            row: warning.lineNo,\n            type: \"error\",\n            column: 0,\n            text: warning.message,\n          }),\n        )}\n      />\n    </EditorWrapper>\n  );\n};\n","import { Button, Link, Text, theme as GnosisTheme } from \"@gnosis.pm/safe-react-components\";\nimport { createStyles } from \"@material-ui/core\";\nimport React, { useCallback, useMemo } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\n\nexport type CSVUploadProps = {\n  onChange: (string) => void;\n};\n\nexport const CSVUpload = (props: CSVUploadProps): JSX.Element => {\n  const { onChange } = props;\n  const onDrop = useCallback(\n    (acceptedFiles: File[]) => {\n      acceptedFiles.forEach((file) => {\n        console.log(\"Received Filename\", file.name);\n        const reader = new FileReader();\n        reader.onload = function (evt) {\n          if (!evt.target) {\n            return;\n          }\n          onChange(evt.target.result as string);\n        };\n        reader.readAsText(file);\n      });\n    },\n    [onChange],\n  );\n\n  const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone({\n    maxFiles: 1,\n    onDrop,\n    accept: \"text/csv\",\n  });\n\n  const style = useMemo(\n    () => ({\n      ...styles.baseStyle,\n      ...(isDragActive ? styles.activeStyle : {}),\n      ...(isDragAccept ? styles.acceptStyle : {}),\n      ...(isDragReject ? styles.rejectStyle : {}),\n    }),\n    [isDragActive, isDragReject, isDragAccept],\n  );\n\n  return (\n    <div>\n      <div {...getRootProps({ style })}>\n        <input {...getInputProps()} />\n        <div\n          style={{\n            display: \"inline-flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            gap: \"8px\",\n          }}\n        >\n          <Button size=\"md\" variant=\"contained\" color=\"primary\" component=\"span\">\n            Upload\n          </Button>\n          <Text center size=\"lg\">\n            or drop file here, or paste above\n          </Text>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst styles = createStyles({\n  baseStyle: {\n    lex: 1,\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    padding: \"20px\",\n    borderWidth: 2,\n    borderRadius: 2,\n    width: \"660px\",\n    borderColor: \"rgba(0, 0, 0, 0.23)\",\n    borderStyle: \"dashed\",\n    backgroundColor: \"#fafafa\",\n    color: \"#bdbdbd\",\n    outline: \"none\",\n    transition: \"border .24s ease-in-out\",\n  },\n  activeStyle: {\n    borderColor: \"#2196f3\",\n  },\n  acceptStyle: {\n    borderColor: GnosisTheme.colors.primary,\n  },\n  rejectStyle: {\n    borderColor: GnosisTheme.colors.error,\n  },\n});\n","import { Icon, Text, Tooltip } from \"@gnosis.pm/safe-react-components\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\ntype ReceiverProps = {\n  receiverEnsName: string | null;\n  receiverAddress: string;\n};\n\nconst Container = styled.div`\n  flex: 1;\n  flex-direction: row;\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const Receiver = (props: ReceiverProps) => {\n  const { receiverEnsName, receiverAddress } = props;\n  return receiverEnsName !== null ? (\n    <Container>\n      <Text size=\"md\">{receiverEnsName}</Text>\n      <Tooltip title={receiverAddress}>\n        <span>\n          <Icon type=\"info\" size=\"sm\" />\n        </span>\n      </Tooltip>\n    </Container>\n  ) : (\n    <Text size=\"md\">{receiverAddress}</Text>\n  );\n};\n","import { Text } from \"@gnosis.pm/safe-react-components\";\nimport styled from \"styled-components\";\n\nimport { useTokenList } from \"../hooks/token\";\n\ntype TokenProps = {\n  tokenAddress: string | null;\n  symbol?: string;\n};\n\nconst Container = styled.div`\n  flex: 1;\n  flex-direction: row;\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const Token = (props: TokenProps) => {\n  const { tokenAddress, symbol } = props;\n  const { tokenList } = useTokenList();\n  return (\n    <Container>\n      <img /* TODO - alt doesn't really work here */\n        alt={\"\"}\n        src={tokenList.get(tokenAddress)?.logoURI}\n        style={{\n          maxWidth: 20,\n          marginRight: 3,\n          verticalAlign: \"middle\",\n        }}\n      />{\" \"}\n      <Text size=\"md\">{symbol || tokenAddress}</Text>\n    </Container>\n  );\n};\n","import { Table, Text } from \"@gnosis.pm/safe-react-components\";\nimport React from \"react\";\n\nimport { Payment } from \"../parser\";\n\nimport { Receiver } from \"./Receiver\";\nimport { Token } from \"./Token\";\n\ntype TransferTableProps = {\n  transferContent: Payment[];\n};\n\nexport const TransferTable = (props: TransferTableProps) => {\n  const { transferContent } = props;\n  return (\n    <div>\n      <Table\n        headers={[\n          { id: \"token\", label: \"Token\" },\n          { id: \"receiver\", label: \"Receiver\" },\n          { id: \"amount\", label: \"Amount\" },\n        ]}\n        rows={transferContent.map((row, index) => {\n          return {\n            id: \"\" + index,\n            cells: [\n              { id: \"token\", content: <Token tokenAddress={row.tokenAddress} symbol={row.symbol} /> },\n              {\n                id: \"receiver\",\n                content: <Receiver receiverAddress={row.receiver} receiverEnsName={row.receiverEnsName} />,\n              },\n              { id: \"amount\", content: <Text size=\"md\">{row.amount.toString()}</Text> },\n            ],\n          };\n        })}\n      />\n    </div>\n  );\n};\n","import { SafeAppProvider } from \"@gnosis.pm/safe-apps-provider\";\nimport { useSafeAppsSDK } from \"@gnosis.pm/safe-apps-react-sdk\";\nimport { Card, Text, Button, Loader } from \"@gnosis.pm/safe-react-components\";\nimport { ethers } from \"ethers\";\nimport debounce from \"lodash.debounce\";\nimport React, { useCallback, useContext, useMemo, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { MessageContext } from \"../contexts/MessageContextProvider\";\nimport { useEnsResolver } from \"../hooks/ens\";\nimport { useTokenInfoProvider } from \"../hooks/token\";\nimport { parseCSV, Payment } from \"../parser\";\nimport { buildTransfers } from \"../transfers\";\nimport { checkAllBalances, transfersToSummary } from \"../utils\";\n\nimport { CSVEditor } from \"./CSVEditor\";\nimport { CSVUpload } from \"./CSVUpload\";\nimport { TransferTable } from \"./TransferTable\";\n\nconst Form = styled.div`\n  flex: 1;\n  flex-direction: column;\n  display: flex;\n  justify-content: space-around;\n  gap: 8px;\n`;\n\nexport interface CSVFormProps {}\n\nexport const CSVForm = (props: CSVFormProps): JSX.Element => {\n  const [parsing, setParsing] = useState(false);\n  const [transferContent, setTransferContent] = useState<Payment[]>([]);\n  const [csvText, setCsvText] = useState<string>(\"token_address,receiver,amount\");\n  const [submitting, setSubmitting] = useState(false);\n\n  const { setCodeWarnings, setMessages } = useContext(MessageContext);\n\n  const { safe, sdk } = useSafeAppsSDK();\n  const web3Provider = useMemo(() => new ethers.providers.Web3Provider(new SafeAppProvider(safe, sdk)), [safe, sdk]);\n  const tokenInfoProvider = useTokenInfoProvider();\n  const ensResolver = useEnsResolver();\n\n  const submitTx = useCallback(async () => {\n    setSubmitting(true);\n    try {\n      const txs = buildTransfers(transferContent);\n      console.log(`Encoded ${txs.length} ERC20 transfers.`);\n      const sendTxResponse = await sdk.txs.send({ txs });\n      const safeTx = await sdk.txs.getBySafeTxHash(sendTxResponse.safeTxHash);\n      console.log({ safeTx });\n    } catch (e) {\n      console.error(e);\n    }\n    setSubmitting(false);\n  }, [transferContent, sdk.txs]);\n\n  const onChangeTextHandler = (csvText: string) => {\n    setCsvText(csvText);\n    parseAndValidateCSV(csvText);\n  };\n\n  const parseAndValidateCSV = useMemo(\n    () =>\n      debounce((csvText: string) => {\n        setParsing(true);\n        const parsePromise = parseCSV(csvText, tokenInfoProvider, ensResolver);\n        parsePromise\n          .then(async ([transfers, warnings]) => {\n            const uniqueReceiversWithoutEnsName = transfers.reduce(\n              (previousValue, currentValue): Set<string> =>\n                currentValue.receiverEnsName === null ? previousValue.add(currentValue.receiver) : previousValue,\n              new Set<string>(),\n            );\n            if (uniqueReceiversWithoutEnsName.size < 15) {\n              transfers = await Promise.all(\n                // If there is no ENS Name we will try to lookup the address\n                transfers.map(async (transfer) =>\n                  transfer.receiverEnsName\n                    ? transfer\n                    : {\n                        ...transfer,\n                        receiverEnsName: (await ensResolver.isEnsEnabled())\n                          ? await ensResolver.lookupAddress(transfer.receiver)\n                          : null,\n                      },\n                ),\n              );\n            }\n            const summary = transfersToSummary(transfers);\n            checkAllBalances(summary, web3Provider, safe).then((insufficientBalances) =>\n              setMessages(\n                insufficientBalances.map((insufficientBalanceInfo) => ({\n                  message: `Insufficient Balance: ${insufficientBalanceInfo.transferAmount} of ${insufficientBalanceInfo.token}`,\n                  severity: \"warning\",\n                })),\n              ),\n            );\n            setTransferContent(transfers);\n            setCodeWarnings(warnings);\n            setParsing(false);\n          })\n          .catch((reason: any) => setMessages([{ severity: \"error\", message: reason.message }]));\n      }, 1000),\n    [ensResolver, safe, setCodeWarnings, setMessages, tokenInfoProvider, web3Provider],\n  );\n\n  return (\n    <Card className=\"cardWithCustomShadow\">\n      <Form>\n        <Text size=\"xl\">Upload KDA to ETH Attestation Batch</Text>\n        <Text size=\"lg\">Format: token_address,receiver,amount,decimals</Text>\n\n        <CSVEditor csvText={csvText} onChange={onChangeTextHandler} />\n\n        <CSVUpload onChange={onChangeTextHandler} />\n\n        {transferContent.length > 0 && <TransferTable transferContent={transferContent} />}\n\n        {submitting ? (\n          <>\n            <Loader size=\"md\" />\n            <br />\n            <Button size=\"lg\" color=\"secondary\" onClick={() => setSubmitting(false)}>\n              Cancel\n            </Button>\n          </>\n        ) : (\n          <Button\n            style={{ alignSelf: \"flex-start\" }}\n            size=\"lg\"\n            color=\"primary\"\n            onClick={submitTx}\n            disabled={parsing || transferContent.length === 0}\n          >\n            {parsing ? <Loader size=\"sm\" color=\"primaryLight\" /> : \"Submit\"}\n          </Button>\n        )}\n      </Form>\n    </Card>\n  );\n};\n","import { SafeAppProvider } from \"@gnosis.pm/safe-apps-provider\";\nimport { useSafeAppsSDK } from \"@gnosis.pm/safe-apps-react-sdk\";\nimport { ethers } from \"ethers\";\nimport { useCallback, useMemo } from \"react\";\n\nexport interface EnsResolver {\n  /**\n   * Resolves a ENS name to a corresponding address.\n   * Important: If the name is already a valid address, this address will be returned.\n   *\n   * @returns null if the ENS name cannot be resolved.\n   *\n   * @param ensName ENS Name or address.\n   */\n  resolveName(ensName: string): Promise<string | null>;\n\n  /**\n   * Looks up the ENS name of an address.\n   *\n   * @returns null if no ENS name is registered for that address.\n   * @param address address to lookup\n   */\n  lookupAddress(address: string): Promise<string | null>;\n\n  /**\n   * @returns true, if ENS is enabled for current network.\n   */\n  isEnsEnabled(): Promise<boolean>;\n}\n\nexport const useEnsResolver: () => EnsResolver = () => {\n  const { safe, sdk } = useSafeAppsSDK();\n  const web3Provider = useMemo(() => new ethers.providers.Web3Provider(new SafeAppProvider(safe, sdk)), [sdk, safe]);\n\n  const resolveCache = useMemo(() => new Map<string, string | null>(), []);\n\n  const lookupCache = useMemo(() => new Map<string, string | null>(), []);\n\n  const cachedResolveName = useCallback(\n    async (ensName: string) => {\n      const cachedAddress = resolveCache.get(ensName);\n      const resolvedAddress = cachedAddress ? cachedAddress : await web3Provider.resolveName(ensName);\n      if (!resolveCache.has(ensName)) {\n        resolveCache.set(ensName, resolvedAddress);\n      }\n      return resolvedAddress;\n    },\n    [resolveCache, web3Provider],\n  );\n\n  const cachedLookupAddress = useCallback(\n    async (address: string) => {\n      const cachedAddress = lookupCache.get(address);\n      const resolvedEnsName =\n        typeof cachedAddress !== \"undefined\" ? cachedAddress : await web3Provider.lookupAddress(address);\n      if (!lookupCache.has(address)) {\n        lookupCache.set(address, resolvedEnsName);\n      }\n      return resolvedEnsName;\n    },\n    [lookupCache, web3Provider],\n  );\n\n  const isEnsEnabled = useCallback(async () => {\n    const network = await web3Provider.getNetwork();\n    return typeof network.ensAddress !== \"undefined\" && network.ensAddress !== null;\n  }, [web3Provider]);\n\n  return useMemo(\n    () => ({\n      resolveName: (ensName: string) => cachedResolveName(ensName),\n      lookupAddress: (address: string) => cachedLookupAddress(address),\n      isEnsEnabled: () => isEnsEnabled(),\n    }),\n    [cachedResolveName, cachedLookupAddress, isEnsEnabled],\n  );\n};\n","import { BaseTransaction } from \"@gnosis.pm/safe-apps-sdk\";\n\nimport { erc20Interface } from \"./erc20\";\nimport { Payment } from \"./parser\";\nimport { toWei } from \"./utils\";\n\nexport function buildTransfers(transferData: Payment[]): BaseTransaction[] {\n  const txList: BaseTransaction[] = transferData.map((transfer) => {\n    if (transfer.tokenAddress === null) {\n      // Native asset transfer\n      return {\n        to: transfer.receiver,\n        value: toWei(transfer.amount, 18).toFixed(),\n        data: \"0x\",\n      };\n    } else {\n      // ERC20 transfer\n      const decimals = transfer.decimals;\n      const amountData = toWei(transfer.amount, decimals);\n      return {\n        to: transfer.tokenAddress,\n        value: \"0\",\n        data: erc20Interface.encodeFunctionData(\"transfer\", [transfer.receiver, amountData.toFixed()]),\n      };\n    }\n  });\n  return txList;\n}\n","import { Snackbar } from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport React, { useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport { MessageContext, Message } from \"../contexts/MessageContextProvider\";\n\nexport function Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst HeaderContainer = styled.div`\n  flex: 1;\n  width: 100%;\n`;\n\nconst AlertWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  width: 100%;\n`;\n\nexport const Header = (): JSX.Element => {\n  const messageContext = useContext(MessageContext);\n  const messages = messageContext.messages;\n  return (\n    <HeaderContainer>\n      {messages?.length > 0 && (\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n          open={messages?.length > 0}\n          onClose={() => messageContext.setMessages([])}\n          autoHideDuration={6000}\n          style={{ gap: \"4px\" }}\n        >\n          <AlertWrapper>\n            {messages.map((message: Message, index: number) => (\n              <Alert\n                severity={message.severity}\n                key={\"message\" + index}\n                onClose={() => messageContext.removeMessage(message)}\n              >\n                {message.message}\n              </Alert>\n            ))}\n          </AlertWrapper>\n        </Snackbar>\n      )}\n    </HeaderContainer>\n  );\n};\n","import { Loader, Text } from \"@gnosis.pm/safe-react-components\";\nimport { setUseWhatChange } from \"@simbathesailor/use-what-changed\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { CSVForm } from \"./components/CSVForm\";\nimport { Header } from \"./components/Header\";\nimport { useTokenList } from \"./hooks/token\";\n\nsetUseWhatChange(process.env.NODE_ENV === \"development\");\n\nconst App: React.FC = () => {\n  const { isLoading } = useTokenList();\n\n  return (\n    <Container>\n      <Header />\n      {isLoading ? (\n        <>\n          <Loader size={\"lg\"} />\n          <Text size={\"lg\"}>Loading Tokenlist...</Text>\n        </>\n      ) : (\n        <CSVForm />\n      )}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  margin-left: 16px;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  justify-content: left;\n  width: 100%;\n`;\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/error-icon.30ff2119.svg\";","import avertaBoldFont from \"@gnosis.pm/safe-react-components/dist/fonts/averta-bold.woff2\";\nimport avertaFont from \"@gnosis.pm/safe-react-components/dist/fonts/averta-normal.woff2\";\nimport { createGlobalStyle } from \"styled-components\";\n\nimport errorIcon from \"./static/error-icon.svg\";\n\nconst GlobalStyle = createGlobalStyle`\n    html {\n        height: 100%\n    }\n\n    body {\n       height: 100%;\n       margin: 0px;\n       padding: 0px;\n    }\n\n    #root {\n        height: 100%;\n        padding-right: 2rem;\n    }\n\n    .MuiFormControl-root,\n    .MuiInputBase-root {\n        width: 100% !important;\n    }\n\n    @font-face {\n        font-family: 'Averta';\n        src: local('Averta'), local('Averta Bold'),\n        url(${avertaFont}) format('woff2'),\n        url(${avertaBoldFont}) format('woff');\n    }\n\n    .error-marker {\n        position: absolute;\n        background-color: lightpink;\n        display: block;\n      }\n    \n    .error-marker:hover::after {\n        content: 'DescriptionTest';\n    }\n    .ace_error {\n        background-image: url(${errorIcon}) !important;\n        background-size: 15px;\n    }\n    .ace_tooltip {\n        font-family: 'Averta' !important;\n    }\n\n    .cardWithCustomShadow {\n        box-shadow: 1px 2px 10px 0.18 #000000;\n        margin-top: 16px;\n    }\n\n    .MuiTableCell-head {\n        position: sticky;\n        top: 0px;\n        background-color: #FFF;\n        box-shadow: 10px 2px 10px 0 #F7F5F5;\n    }\n    .MuiTableContainer-root {\n        overflow: auto;\n        max-height: 750px;\n    }\n\n    .MuiPaper-elevation3 {\n        box-shadow: 0px 3px 3px -2px #F7F5F5,0px 3px 4px 0px #F7F5F5,0px 1px 8px 0px #F7F5F5 !important;\n    }\n`;\n\nexport default GlobalStyle;\n","import SafeProvider from \"@gnosis.pm/safe-apps-react-sdk\";\nimport { theme, Loader, Title } from \"@gnosis.pm/safe-react-components\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport App from \"./App\";\nimport GlobalStyle from \"./GlobalStyle\";\nimport { MessageContextProvider } from \"./contexts/MessageContextProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <SafeProvider\n        loader={\n          <>\n            <Title size=\"md\">Waiting for Safe...</Title>\n            <Loader size=\"md\" />\n          </>\n        }\n      >\n        <MessageContextProvider>\n          <App />\n        </MessageContextProvider>\n      </SafeProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}